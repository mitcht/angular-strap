{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","evt","keyCode","onBodyClick","directive","target","hide","stopPropagation","items","$element","querySelectorAll","$rootScope","$new","parentEl","index","forEach","preventDefault","focus","length","show","el","i","$onKeyDown","on","hasClass","$isShown","removeClass","destroy","off","scope","parent","prototype","$window","$sce","restrict","link","falseValueRegExp","attr","transclusion","bsDropdown","$watch","newValue","oldValue","content","dropdown","key","isString","match","bsShow","isDefined","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      prefixEvent: 'dropdown',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function() {\r\n            options.keyboard && $dropdown.$element && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          }, 0, false);\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          if(!$dropdown.$isShown) return;\r\n          options.keyboard && $dropdown.$element && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        var destroy = $dropdown.destroy;\r\n        $dropdown.destroy = function() {\r\n          bodyEl.off('click', onBodyClick);\r\n          destroy();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}