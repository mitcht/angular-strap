{"version":3,"sources":["modules/aside.js"],"names":["angular","contentTemplate","provider","container","this","defaults","element","backdrop","keyboard","html","show","$get","AsideFactory","$aside","options","config","directive","requestAnimationFrame","restrict","$modal","link","scope","isDefined","key","falseValueRegExp","forEach","attr","$observe","newValue","oldValue","bsAside","$watch","extend","content","aside","trigger","on","toggle","$on","destroy"],"mappings":"AAOA,YAEAA,SAGMC,OAAAA,wBAAiB,yBAAAC,SAAA,SAAA,WAFrB,GAGIC,GAAWC,KAAAC,UACXC,UAAS,0BACTC,YAAU,QACVC,YAAU,QACVC,UAAM,QACNC,YAAM,uBAFRT,iBAAiB,EAKjBG,WAAKO,EAEHL,QAASM,KAJXL,UAMQM,EALRL,UAQQM,EAPRL,MASII,EARJH,MAUI,EARNN,MAYIO,MAAOC,SAAAA,SAAAA,GAXT,QAASA,GAAaG,GAiBvBC,GAAAA,MAEKC,EAAAA,QAAAA,UAAgCA,EAAAA,EAGlCC,OADFL,GAAAM,EAAAL,GAGEM,MAAMR,OAhBTI,UAkBoBK,WAAOA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GAAgBf,EAAAA,uBAAAA,EAAAA,UAhB5C,QACEY,SAAU,MACVG,OAeIrB,EAdJoB,KAeM,SAAWE,EAAeC,EAAOT,EAAQS,GAd7C,GAAIT,IAkBFO,MAAIG,EACJxB,QAAQyB,EACNf,MAAGV,EAKLA,SAAQyB,SAAS,WAAS,cAAY,aAASF,eAAAA,kBAAAA,YAAAA,WAAAA,WAAAA,OAAAA,YAAAA,aAAAA,SAAAA,GAC7CG,QAAKH,UAAaI,EAASJ,MAAKT,EAASc,GAAAA,EAAUC,KAlBvD,IAAIL,GAAmB,eACvBxB,SAAQyB,SAAU,WAAY,WAAY,OAAQ,aAAe,SAASF,GAuBnEO,QAAAA,UAAiBC,EAAOL,KAAKI,EAAkBF,KAAAA,EAAUC,MAAAA,EAAAA,IAAAA,KApBhE7B,QAsBMA,SAAQgC,QAAcJ,WAAAA,SAAAA,GArB1BF,EAAKH,IAsBIG,EAAAC,SAAAJ,EAAA,SAAAK,EAAAC,GACLR,EAAMY,GAAAA,EAAUL,YAAAA,OAKpBF,EAAIQ,SAAQrB,EAAOC,OAAAA,EAAAA,QAAAA,SAAAA,EAAAA,GAGnBR,QAAWoB,SAAKS,GAGhBd,QAAUW,OAAAX,EAAYO,GAEpBd,EAAAA,QAAUc,IA1BX,EACH,IAAIM,GAAQrB,EAAOC,EACnBR,GAAQ8B,GAAGV,EAAKS,SAAW,QAASD,EAAMG,QAC1ChB,EAAMiB,IAAI,WAAY,WAChBJ,GAAOA,EAAMK,UACjBzB,EAAU,KACVoB,EAAQ","file":"modules/aside.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$aside', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade-and-slide-right',\r\n      prefixClass: 'aside',\r\n      prefixEvent: 'aside',\r\n      placement: 'right',\r\n      templateUrl: 'aside/aside.tpl.html',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true\r\n    };\r\n\r\n    this.$get = function($modal) {\r\n\r\n      function AsideFactory(config) {\r\n\r\n        var $aside = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $aside = $modal(options);\r\n\r\n        return $aside;\r\n\r\n      }\r\n\r\n      return AsideFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAside', function($window, $sce, $aside) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize aside\r\n        var aside = $aside(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', aside.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (aside) aside.destroy();\r\n          options = null;\r\n          aside = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}